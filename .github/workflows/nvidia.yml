name: üêß Nvidia

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-nvidia
  cancel-in-progress: true

jobs:
  tests-cuda11:
    name: CTK@11.2
    runs-on: ubuntu-20.04
    if: github.event.pull_request.draft == false
    env: {CXX: nvcc, CXXFLAGS: "--forward-unknown-to-host-compiler -Xcompiler -Werror"}
    steps:
    - uses: actions/checkout@v3
    - name: Dependencies
      run: .github/workflows/dependencies/install_nvcc11.sh
    - name: Build & Install
      run: |
        export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
        export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
        which nvcc || echo "nvcc not in PATH!"

        share/openPMD/download_samples.sh build
        cmake -S . -B build        \
          -DopenPMD_USE_PYTHON=OFF \
          -DopenPMD_USE_MPI=OFF    \
          -DopenPMD_USE_HDF5=ON    \
          -DopenPMD_USE_INVASIVE_TESTS=ON
        cmake --build build --parallel 2
        ctest --test-dir build --output-on-failure

  tests-nvhpc21-11-nvcc:
    name: NVHPC@21.11
    runs-on: ubuntu-20.04
    if: github.event.pull_request.draft == false
    # Catch warnings:
    #   line 4314: error: variable "<unnamed>::autoRegistrar73" was declared but never referenced
    # env: {CXXFLAGS: "-Werror -Wno-deprecated-declarations"}
    steps:
    - uses: actions/checkout@v3
    - name: Dependencies
      run: .github/workflows/dependencies/install_nvhpc21-11.sh
    - name: Build & Install
      run: |
        source /etc/profile.d/modules.sh
        module load /opt/nvidia/hpc_sdk/modulefiles/nvhpc/21.11

        which nvcc || echo "nvcc not in PATH!"
        which nvc++ || echo "nvc++ not in PATH!"
        which nvc || echo "nvc not in PATH!"
        which nvfortran || echo "nvfortran not in PATH!"
        nvcc --version
        nvc++ --version
        nvc --version
        nvfortran --version
        cmake --version

        share/openPMD/download_samples.sh build
        cmake -S . -B build        \
          -DCMAKE_C_COMPILER=$(which nvc)     \
          -DCMAKE_CXX_COMPILER=$(which nvc++) \
          -DopenPMD_USE_PYTHON=OFF \
          -DopenPMD_USE_MPI=OFF    \
          -DopenPMD_USE_HDF5=ON    \
          -DopenPMD_USE_INVASIVE_TESTS=ON
        cmake --build build --parallel 2
        ctest --test-dir build --output-on-failure
