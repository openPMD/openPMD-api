language: python
python:
  - "3.9"

branches:
  only:
  - wheels

env:
  global:
    - OPENPMD_GIT_REF="0.15.0"

    - CIBW_PROJECT_REQUIRES_PYTHON=">=3.7"
    # Install dependencies on Linux and OSX
    - CIBW_BEFORE_BUILD="bash -x .github/library_builders.sh"
    # for the openPMD-api build, CMake shall search for
    # static dependencies of HDF5 and ADIOS1 (see setup.py)
    - CIBW_ENVIRONMENT="HDF5_USE_STATIC_LIBRARIES='ON' ADIOS_USE_STATIC_LIBS='ON' openPMD_CMAKE_openPMD_USE_HDF5='ON' openPMD_CMAKE_openPMD_USE_ADIOS1='ON'" openPMD_CMAKE_openPMD_USE_ADIOS2='ON'"
    # Show a bit more output (pip -v)
    - CIBW_BUILD_VERBOSITY="1"

jobs:
  include:
    # perform a linux ARMv8 build
    # note: takes >50min, so we need to split
    # +manylinux
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="cp37-manylinux_aarch64 cp38-manylinux_aarch64"
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="cp39-manylinux_aarch64 cp310-manylinux_aarch64"
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="cp311-manylinux_aarch64 pp37-manylinux_aarch64"
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="pp38-manylinux_aarch64 pp39-manylinux_aarch64"
    # +musllinux
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="cp37-musllinux_aarch64 cp38-musllinux_aarch64"
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="cp39-musllinux_aarch64 cp310-musllinux_aarch64"
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="cp311-musllinux_aarch64"

    # perform a linux PPC64LE build
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp37-manylinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp38-manylinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp39-manylinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp310-manylinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp311-manylinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp37-musllinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp38-musllinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp39-musllinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp310-musllinux_ppc64le"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="cp311-musllinux_ppc64le"

    # perform a linux S390X build
    # blocked by https://github.com/GTkorvo/dill/issues/15
    #- services: docker
    #  arch: s390x
    #  dist: focal
    #  env:
    #    - CIBW_BUILD="*_s390x"

    # and a build for old macOS versions (10.13 with xcode9.4.1 ~2017)
    # - os: osx
    #   osx_image: xcode9.4
    #   language: shell
    #   python: 3.6

install:
  - git clone --branch ${OPENPMD_GIT_REF} --depth 1 https://github.com/openPMD/openPMD-api.git src
  - cp library_builders.sh src/.github/
  - python -m pip install --upgrade pip setuptools wheel
  - python -m pip install cibuildwheel==2.12.1
  # twine & cryptography: see
  #   https://github.com/scikit-build/cmake-python-distributions/blob/4730aeee240917303f293dffc89a8d8d5a4787c4/requirements-deploy.txt
  #   https://github.com/pyca/cryptography/issues/6086
  - python3 -m pip install twine cryptography~=3.3.2
  - python3 -m pip install "patch==1.*"

# Download & Apply Patches
before_script:
  - mkdir -p src/.patch
  - cd src/.patch
  - curl -sOL https://github.com/ax3l/openPMD-api/commit/b622cc5ea770f866c1e373185a9e389c04bdb54c.patch
  - curl -sOL https://github.com/ax3l/openPMD-api/commit/a1aac530dbc8261656cf6a07900374bc6ac6fcab.patch
  - curl -sOL https://github.com/ax3l/openPMD-api/commit/43c4bf4327616e9cf7e7992d91d9b8ccd4ee3a83.patch
  - curl -sOL https://gist.githubusercontent.com/ax3l/5e83edefe4b05cf6aa2a971649285fe0/raw/023cbd69e06715e5191ece741bb1de56560a9f96/0001-Bump-setup.py.patch
  - cd ..
  - python3 -m patch .patch/b622cc5ea770f866c1e373185a9e389c04bdb54c.patch
  - python3 -m patch .patch/a1aac530dbc8261656cf6a07900374bc6ac6fcab.patch
  - python3 -m patch .patch/43c4bf4327616e9cf7e7992d91d9b8ccd4ee3a83.patch
  - python3 -m patch .patch/0001-Bump-setup.py.patch
  - cd ..

script:
  - cd src
  - python3 -m cibuildwheel --output-dir ../wheelhouse
  - cd ..

deploy:
  - provider: script
    script: python3 -m twine upload --skip-existing wheelhouse/*
    skip_cleanup: true
    on:
      repo: ${TRAVIS_REPO_SLUG}
      branch: wheels
