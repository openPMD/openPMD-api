name: üçè macOS

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-macos
  cancel-in-progress: true

jobs:
# TODO: (old Travis-CI coverage)
#  appleclang9_py37_nompi_h5
#  appleclang10_py37_h5_ad2_libcpp
#  appleclang11_nopy_nompi_h5_ad2

  appleclang15_py_mpi_h5_ad2:
    runs-on: macos-latest
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v4
    - name: Install
      run: |
        rm -rf /usr/local/bin/2to3
        set +e
        brew update
        brew install adios2 || true
        brew install hdf5-mpi || true
        brew install python || true
        python3 -m pip install -U mpi4py numpy pandas
        set -e
    - name: Build
      env: {CXXFLAGS: -Werror, MACOSX_DEPLOYMENT_TARGET: 11.0}
      # 10.14+ due to std::visit
      # 10.15+ due to std::filesystem in toml11
      #   https://cibuildwheel.readthedocs.io/en/stable/cpp_standards/#macos-and-deployment-target-versions
      # 11.0+ for arm64/aarch64 (M1/M2) builds
      run: |
        share/openPMD/download_samples.sh build
        cmake -S . -B build \
          -DopenPMD_USE_PYTHON=ON \
          -DopenPMD_USE_MPI=ON    \
          -DopenPMD_USE_HDF5=ON   \
          -DopenPMD_USE_ADIOS2=ON \
          -DopenPMD_USE_INVASIVE_TESTS=ON \
          -DMPIEXEC_EXECUTABLE=".github/workflows/mpirun_workaround.sh"
        cmake --build build --parallel 3
        ctest --test-dir build --verbose

  appleclang14_py:
    runs-on: macos-12
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v4
    - name: Install
      env: {MACOSX_DEPLOYMENT_TARGET: 11.0}
      run: |
        set +e
        python3 -m pip install -U numpy pandas
        set -e
    - name: Build
      env: {CXXFLAGS: -Werror, MACOSX_DEPLOYMENT_TARGET: 11.0}
      # 10.14+ due to std::visit
      # 10.15+ due to std::filesystem in toml11
      #   https://cibuildwheel.readthedocs.io/en/stable/cpp_standards/#macos-and-deployment-target-versions
      # 11.0+ for arm64/aarch64 (M1/M2) builds
      run: |
        share/openPMD/download_samples.sh build
        cmake -S . -B build \
          -DopenPMD_USE_PYTHON=ON  \
          -DopenPMD_USE_MPI=OFF    \
          -DopenPMD_USE_HDF5=OFF   \
          -DopenPMD_USE_ADIOS2=OFF \
          -DopenPMD_USE_INVASIVE_TESTS=ON \
          -DPython_EXECUTABLE=$(which python3)
        cmake --build build --parallel 3
        ctest --test-dir build --verbose
        rm -rf build/samples
        share/openPMD/download_samples.sh build
        OPENPMD2_ADIOS2_USE_GROUP_TABLE=1 ctest --test-dir build --verbose

# TODO: apple_conda_ompi_all (similar to conda_ompi_all on Linux)
#   both OpenMPI and MPICH cause startup (MPI_Init) issues on GitHub Actions
