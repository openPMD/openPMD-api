name: üêß Intel

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-intel
  cancel-in-progress: true

jobs:
  icc_cxxonly:
    name: ICC C++ only
    runs-on: ubuntu-20.04
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v3
    - name: Install
      run: |
        sudo .github/workflows/dependencies/install_icc
    - name: Build
      # Due to compiler bugs in Intel compiler, we need to disable warning 1011
      # (missing return value), otherwise `if constexpr` functions
      # don't compile.
      # See https://community.intel.com/t5/Intel-C-Compiler/quot-if-constexpr-quot-and-quot-missing-return-statement-quot-in/td-p/1154551
      # Using a local pragma does not work due to the reasons stated there.
      env: {CXXFLAGS: -Werror -wd1011}
      run: |
        set +e; source /opt/intel/oneapi/setvars.sh; set -e
        share/openPMD/download_samples.sh build
        cmake -S . -B build \
          -DCMAKE_C_COMPILER=$(which icc)    \
          -DCMAKE_CXX_COMPILER=$(which icpc) \
          -DopenPMD_USE_PYTHON=OFF           \
          -DopenPMD_USE_MPI=OFF
        cmake --build build --parallel 2
        ctest --test-dir build --output-on-failure

  icx_cxxonly:
    name: ICX C++ only
    runs-on: ubuntu-20.04
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v3
    - name: Install
      run: |
        sudo .github/workflows/dependencies/install_icx
    - name: Build
      env: {CXXFLAGS: -Werror}
      run: |
        set +e; source /opt/intel/oneapi/setvars.sh; set -e
        share/openPMD/download_samples.sh build
        cmake -S . -B build \
          -DCMAKE_C_COMPILER=$(which icx)    \
          -DCMAKE_CXX_COMPILER=$(which icpx) \
          -DopenPMD_USE_PYTHON=OFF           \
          -DopenPMD_USE_MPI=OFF
        cmake --build build --parallel 2
        ctest --test-dir build --output-on-failure
